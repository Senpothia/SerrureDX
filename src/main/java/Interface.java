
import com.fazecast.jSerialComm.SerialPort;
import java.awt.Color;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.util.ArrayList;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import javax.swing.Action;
import javax.swing.ButtonModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JRadioButtonMenuItem;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Michel
 */
public class Interface extends javax.swing.JFrame implements Observer{

    private int baudeRate = 9600;
    private int numDatabits = 8;
    private int parity = 0;
    private int stopBits = 1;
    private int newReadTimeout = 1000;
    private int newWriteTimeout = 0;

    Connecteur connecteur = getConnecteur();
    
    /*
     * Creates new form Interface
     */
    public Interface() {

        initComponents();
        statutRemote.setBackground(Color.red);
        statutRemote.setForeground(Color.red);
        statutRemote.setOpaque(true);
        statutRs232.setBackground(Color.red);
        statutRs232.setForeground(Color.red);
        statutRs232.setOpaque(true);

        voyant.setBackground(Color.RED);
        voyant.setForeground(Color.RED);
        voyant.setOpaque(true);
        
        pause.setVisible(false);
        stop.setVisible(false);
        
        this.getContentPane().setBackground(new Color(248, 217, 194));

        List<JRadioButtonMenuItem> listePorts = new ArrayList<JRadioButtonMenuItem>();

        List<String> listePortString = connecteur.getListPorts();

        for (String p : listePortString) {

            JRadioButtonMenuItem m = new JRadioButtonMenuItem(p);
            groupPorts.add(m);
            m.addActionListener(new PortSupplier());
            menuPort.add(m);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reset3 = new javax.swing.JButton();
        compteur3 = new javax.swing.JLabel();
        pause3 = new javax.swing.JButton();
        selectEch3 = new javax.swing.JRadioButton();
        setCompteur3 = new javax.swing.JTextField();
        set3 = new javax.swing.JButton();
        reset4 = new javax.swing.JButton();
        compteur4 = new javax.swing.JLabel();
        pause4 = new javax.swing.JButton();
        selectEch4 = new javax.swing.JRadioButton();
        setCompteur4 = new javax.swing.JTextField();
        set4 = new javax.swing.JButton();
        groupPorts = new javax.swing.ButtonGroup();
        groupBaud = new javax.swing.ButtonGroup();
        groupBits = new javax.swing.ButtonGroup();
        groupStop = new javax.swing.ButtonGroup();
        groupParity = new javax.swing.ButtonGroup();
        titre = new javax.swing.JLabel();
        compteur1 = new javax.swing.JLabel();
        selectEch1 = new javax.swing.JRadioButton();
        setCompteur1 = new javax.swing.JTextField();
        set1 = new javax.swing.JButton();
        reset1 = new javax.swing.JButton();
        pause1 = new javax.swing.JButton();
        reset2 = new javax.swing.JButton();
        compteur2 = new javax.swing.JLabel();
        pause2 = new javax.swing.JButton();
        selectEch2 = new javax.swing.JRadioButton();
        setCompteur2 = new javax.swing.JTextField();
        set2 = new javax.swing.JButton();
        reset5 = new javax.swing.JButton();
        compteur5 = new javax.swing.JLabel();
        pause5 = new javax.swing.JButton();
        selectEch5 = new javax.swing.JRadioButton();
        setCompteur5 = new javax.swing.JTextField();
        set5 = new javax.swing.JButton();
        voyant = new javax.swing.JLabel();
        version = new javax.swing.JLabel();
        console = new javax.swing.JTextField();
        statutRs232 = new javax.swing.JLabel();
        statutRemote = new javax.swing.JLabel();
        RS232 = new javax.swing.JLabel();
        Remote = new javax.swing.JLabel();
        pause6 = new javax.swing.JButton();
        pause7 = new javax.swing.JButton();
        pause8 = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuFichier = new javax.swing.JMenu();
        menuNouveau = new javax.swing.JMenuItem();
        menuModifier = new javax.swing.JMenuItem();
        menuSauvegardes = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuQuitter = new javax.swing.JMenuItem();
        menuConnexion = new javax.swing.JMenu();
        menuPort = new javax.swing.JMenu();
        menuBaud = new javax.swing.JMenu();
        baud9600 = new javax.swing.JRadioButtonMenuItem();
        baud19200 = new javax.swing.JRadioButtonMenuItem();
        baud38400 = new javax.swing.JRadioButtonMenuItem();
        baud115200 = new javax.swing.JRadioButtonMenuItem();
        menuBits = new javax.swing.JMenu();
        bits6 = new javax.swing.JRadioButtonMenuItem();
        bits7 = new javax.swing.JRadioButtonMenuItem();
        bits8 = new javax.swing.JRadioButtonMenuItem();
        bits9 = new javax.swing.JRadioButtonMenuItem();
        menuStop = new javax.swing.JMenu();
        stop1 = new javax.swing.JRadioButtonMenuItem();
        stop2 = new javax.swing.JRadioButtonMenuItem();
        menuParity = new javax.swing.JMenu();
        parityNone = new javax.swing.JRadioButtonMenuItem();
        parityOdd = new javax.swing.JRadioButtonMenuItem();
        parityEven = new javax.swing.JRadioButtonMenuItem();
        btnConnexion = new javax.swing.JMenuItem();
        btnDeconnexion = new javax.swing.JMenuItem();
        menuRemote = new javax.swing.JMenu();
        ajouterRemote = new javax.swing.JMenuItem();
        remoteSelect = new javax.swing.JMenuItem();
        changerRemote = new javax.swing.JMenuItem();
        menuConfig = new javax.swing.JMenu();
        cadence = new javax.swing.JMenu();
        cad_2_min = new javax.swing.JRadioButtonMenuItem();
        cad_1_par_2mins = new javax.swing.JRadioButtonMenuItem();
        cad_1_par_5mins = new javax.swing.JRadioButtonMenuItem();

        reset3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        reset3.setForeground(new java.awt.Color(255, 51, 0));
        reset3.setText("Reset");

        compteur3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        compteur3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        compteur3.setText("0");

        pause3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause3.setForeground(new java.awt.Color(255, 102, 51));
        pause3.setText("Pause");

        selectEch3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        selectEch3.setText("Echantillon 1");

        setCompteur3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        set3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        set3.setForeground(new java.awt.Color(255, 51, 0));
        set3.setText("Set");

        reset4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        reset4.setForeground(new java.awt.Color(255, 51, 0));
        reset4.setText("Reset");

        compteur4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        compteur4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        compteur4.setText("0");

        pause4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause4.setForeground(new java.awt.Color(255, 102, 51));
        pause4.setText("Pause");

        selectEch4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        selectEch4.setText("Echantillon 1");

        setCompteur4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        set4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        set4.setForeground(new java.awt.Color(255, 51, 0));
        set4.setText("Set");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test d'endurance DX200I");
        setBackground(new java.awt.Color(153, 153, 255));

        titre.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre.setText("TEST DX200I");
        titre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        compteur1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        compteur1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        compteur1.setText("0");

        selectEch1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        selectEch1.setText("Echantillon 1");

        setCompteur1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        set1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        set1.setForeground(new java.awt.Color(255, 51, 0));
        set1.setText("Set");

        reset1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        reset1.setForeground(new java.awt.Color(255, 51, 0));
        reset1.setText("Reset");

        pause1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause1.setForeground(new java.awt.Color(255, 102, 51));
        pause1.setText("Pause");

        reset2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        reset2.setForeground(new java.awt.Color(255, 51, 0));
        reset2.setText("Reset");

        compteur2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        compteur2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        compteur2.setText("0");

        pause2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause2.setForeground(new java.awt.Color(255, 102, 51));
        pause2.setText("Pause");

        selectEch2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        selectEch2.setText("Echantillon 2");

        setCompteur2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        set2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        set2.setForeground(new java.awt.Color(255, 51, 0));
        set2.setText("Set");

        reset5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        reset5.setForeground(new java.awt.Color(255, 51, 0));
        reset5.setText("Reset");

        compteur5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        compteur5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        compteur5.setText("0");

        pause5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause5.setForeground(new java.awt.Color(255, 102, 51));
        pause5.setText("Pause");

        selectEch5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        selectEch5.setText("Echantillon 3");

        setCompteur5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        set5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        set5.setForeground(new java.awt.Color(255, 51, 0));
        set5.setText("Set");

        voyant.setBackground(new java.awt.Color(255, 51, 0));
        voyant.setForeground(new java.awt.Color(255, 0, 0));
        voyant.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        voyant.setText("Voyant");

        version.setText("V1.0");

        console.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        console.setText("log");

        statutRs232.setBackground(new java.awt.Color(0, 153, 0));
        statutRs232.setForeground(new java.awt.Color(0, 153, 51));
        statutRs232.setText("Statut");

        statutRemote.setBackground(new java.awt.Color(255, 51, 0));
        statutRemote.setForeground(new java.awt.Color(255, 51, 0));
        statutRemote.setText("Statut");

        RS232.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RS232.setText("RS232");

        Remote.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Remote.setText("REMOTE");

        pause6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause6.setForeground(new java.awt.Color(255, 0, 0));
        pause6.setText("STOP");
        pause6.setToolTipText("");
        pause6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pause6ActionPerformed(evt);
            }
        });

        pause7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause7.setForeground(new java.awt.Color(255, 0, 0));
        pause7.setText("STOP");

        pause8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pause8.setForeground(new java.awt.Color(255, 0, 0));
        pause8.setText("STOP");

        pause.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        pause.setForeground(new java.awt.Color(255, 102, 0));
        pause.setText("PAUSE");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        start.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        start.setForeground(new java.awt.Color(0, 102, 0));
        start.setText("START");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        stop.setForeground(new java.awt.Color(255, 51, 0));
        stop.setText("STOP");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        MenuFichier.setText("Fichier");

        menuNouveau.setText("Nouveau");
        menuNouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNouveauActionPerformed(evt);
            }
        });
        MenuFichier.add(menuNouveau);

        menuModifier.setLabel("Modifier");
        MenuFichier.add(menuModifier);

        menuSauvegardes.setLabel("Sauvegardes");
        MenuFichier.add(menuSauvegardes);
        MenuFichier.add(jSeparator1);

        menuQuitter.setText("Quitter");
        MenuFichier.add(menuQuitter);

        jMenuBar1.add(MenuFichier);

        menuConnexion.setText("Connexion");
        menuConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConnexionActionPerformed(evt);
            }
        });

        menuPort.setText("Port");
        menuConnexion.add(menuPort);

        menuBaud.setText("Baud");

        groupBaud.add(baud9600);
        baud9600.setSelected(true);
        baud9600.setText("9600");
        baud9600.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                baud9600StateChanged(evt);
            }
        });
        menuBaud.add(baud9600);

        groupBaud.add(baud19200);
        baud19200.setText("19200");
        baud19200.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                baud19200StateChanged(evt);
            }
        });
        menuBaud.add(baud19200);

        groupBaud.add(baud38400);
        baud38400.setText("38400");
        baud38400.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                baud38400StateChanged(evt);
            }
        });
        menuBaud.add(baud38400);

        groupBaud.add(baud115200);
        baud115200.setText("115200");
        baud115200.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                baud115200StateChanged(evt);
            }
        });
        menuBaud.add(baud115200);

        menuConnexion.add(menuBaud);

        menuBits.setText("Bits");

        groupBits.add(bits6);
        bits6.setText("6");
        bits6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bits6StateChanged(evt);
            }
        });
        menuBits.add(bits6);

        groupBits.add(bits7);
        bits7.setText("7");
        bits7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bits7StateChanged(evt);
            }
        });
        menuBits.add(bits7);

        groupBits.add(bits8);
        bits8.setSelected(true);
        bits8.setText("8");
        bits8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bits8StateChanged(evt);
            }
        });
        menuBits.add(bits8);

        groupBits.add(bits9);
        bits9.setText("9");
        bits9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bits9StateChanged(evt);
            }
        });
        menuBits.add(bits9);

        menuConnexion.add(menuBits);

        menuStop.setText("Stop");

        groupStop.add(stop1);
        stop1.setSelected(true);
        stop1.setText("1");
        stop1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stop1StateChanged(evt);
            }
        });
        menuStop.add(stop1);

        groupStop.add(stop2);
        stop2.setText("2");
        stop2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stop2StateChanged(evt);
            }
        });
        menuStop.add(stop2);

        menuConnexion.add(menuStop);

        menuParity.setText("Parité");

        groupParity.add(parityNone);
        parityNone.setSelected(true);
        parityNone.setText("None");
        parityNone.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                parityNoneStateChanged(evt);
            }
        });
        menuParity.add(parityNone);

        groupParity.add(parityOdd);
        parityOdd.setText("Paire");
        parityOdd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                parityOddStateChanged(evt);
            }
        });
        menuParity.add(parityOdd);

        groupParity.add(parityEven);
        parityEven.setText("Impaire");
        parityEven.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                parityEvenStateChanged(evt);
            }
        });
        menuParity.add(parityEven);

        menuConnexion.add(menuParity);

        btnConnexion.setText("Connexion");
        btnConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnexionActionPerformed(evt);
            }
        });
        menuConnexion.add(btnConnexion);

        btnDeconnexion.setText("Déconnexion");
        btnDeconnexion.setEnabled(false);
        btnDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeconnexionActionPerformed(evt);
            }
        });
        menuConnexion.add(btnDeconnexion);

        jMenuBar1.add(menuConnexion);

        menuRemote.setText("Remote");

        ajouterRemote.setText("Ajouter");
        menuRemote.add(ajouterRemote);

        remoteSelect.setText("Choisir");
        menuRemote.add(remoteSelect);

        changerRemote.setText("Changer");
        menuRemote.add(changerRemote);

        jMenuBar1.add(menuRemote);

        menuConfig.setText("Configuration");

        cadence.setText("Cadence");

        cad_2_min.setSelected(true);
        cad_2_min.setText("2x1min");
        cadence.add(cad_2_min);

        cad_1_par_2mins.setText("1x2mins");
        cadence.add(cad_1_par_2mins);

        cad_1_par_5mins.setText("1x5mins");
        cadence.add(cad_1_par_5mins);

        menuConfig.add(cadence);

        jMenuBar1.add(menuConfig);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(174, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(version)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(selectEch2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(compteur2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(setCompteur2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(set2)
                                    .addGap(34, 34, 34)
                                    .addComponent(reset2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(pause2))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(selectEch1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(compteur1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(setCompteur1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(set1)
                                    .addGap(34, 34, 34)
                                    .addComponent(reset1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(pause1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(selectEch5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(compteur5, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(stop)
                                        .addGap(22, 22, 22)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(setCompteur5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(start)
                                        .addGap(8, 8, 8)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(set5)
                                        .addGap(34, 34, 34)
                                        .addComponent(reset5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(pause)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pause5)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pause6)
                            .addComponent(pause7)
                            .addComponent(pause8))
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(console, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statutRs232, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RS232))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statutRemote)
                                .addGap(18, 18, 18)
                                .addComponent(Remote)))
                        .addGap(281, 281, 281)
                        .addComponent(titre, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(594, 594, 594)
                        .addComponent(voyant, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statutRs232)
                            .addComponent(RS232))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statutRemote)
                            .addComponent(Remote)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titre)))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectEch1)
                    .addComponent(compteur1)
                    .addComponent(setCompteur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(set1)
                    .addComponent(reset1)
                    .addComponent(pause1)
                    .addComponent(pause6))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectEch2)
                    .addComponent(compteur2)
                    .addComponent(setCompteur2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(set2)
                    .addComponent(reset2)
                    .addComponent(pause2)
                    .addComponent(pause7))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectEch5)
                    .addComponent(compteur5)
                    .addComponent(setCompteur5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(set5)
                    .addComponent(reset5)
                    .addComponent(pause5)
                    .addComponent(pause8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(voyant, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(pause)
                    .addComponent(stop))
                .addGap(33, 33, 33)
                .addComponent(console, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(version)
                .addGap(16, 16, 16))
        );

        pause6.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuNouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNouveauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuNouveauActionPerformed

    private void pause6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pause6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pause6ActionPerformed

    private void btnConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnexionActionPerformed

        int i = connecteur.makeConnection(Connecteur.portName, baudeRate, numDatabits, parity, stopBits);
        if (i == 99) {

            console.setForeground(Color.BLUE);
            console.setText("Connexion réussie");
            setStatusRS232(true);

        } else {

            console.setForeground(Color.red);
            console.setText("Tentative de connexion échouée");
            setStatusRS232(false);

        }


    }//GEN-LAST:event_btnConnexionActionPerformed

    private void btnDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeconnexionActionPerformed

        // disconnect();
    }//GEN-LAST:event_btnDeconnexionActionPerformed

    private void baud9600StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_baud9600StateChanged

        if (baud9600.isSelected()) {

            baudeRate = 9600;
        }
    }//GEN-LAST:event_baud9600StateChanged

    private void baud19200StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_baud19200StateChanged

        if (baud19200.isSelected()) {

            baudeRate = 19200;
        }
    }//GEN-LAST:event_baud19200StateChanged

    private void baud38400StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_baud38400StateChanged

        if (baud38400.isSelected()) {

            baudeRate = 38400;
        }
    }//GEN-LAST:event_baud38400StateChanged

    private void baud115200StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_baud115200StateChanged

        if (baud115200.isSelected()) {

            baudeRate = 115200;
        }
    }//GEN-LAST:event_baud115200StateChanged

    private void bits6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bits6StateChanged

        if (bits6.isSelected()) {

            numDatabits = 6;
        }
    }//GEN-LAST:event_bits6StateChanged

    private void bits7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bits7StateChanged

        if (bits7.isSelected()) {

            numDatabits = 7;
        }
    }//GEN-LAST:event_bits7StateChanged

    private void bits8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bits8StateChanged

        if (bits8.isSelected()) {

            numDatabits = 8;
        }
    }//GEN-LAST:event_bits8StateChanged

    private void bits9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bits9StateChanged

        if (bits9.isSelected()) {

            numDatabits = 9;
        }
    }//GEN-LAST:event_bits9StateChanged

    private void stop1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stop1StateChanged

        if (stop1.isSelected()) {

            stopBits = 1;
        }
    }//GEN-LAST:event_stop1StateChanged

    private void stop2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stop2StateChanged

        if (stop2.isSelected()) {

            stopBits = 2;
        }
    }//GEN-LAST:event_stop2StateChanged

    private void parityNoneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_parityNoneStateChanged

        if (parityNone.isSelected()) {

            parity = 0;
        }
    }//GEN-LAST:event_parityNoneStateChanged

    private void parityOddStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_parityOddStateChanged

        if (parityOdd.isSelected()) {

            parity = 1;
        }
    }//GEN-LAST:event_parityOddStateChanged

    private void parityEvenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_parityEvenStateChanged

        if (parityEven.isSelected()) {

            stopBits = 2;
        }
    }//GEN-LAST:event_parityEvenStateChanged

    private void menuConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConnexionActionPerformed


    }//GEN-LAST:event_menuConnexionActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed

        //System.out.println("Interface.startActionPerformed(), port sélectionné: " + portName);
    }//GEN-LAST:event_startActionPerformed

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pauseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuFichier;
    private javax.swing.JLabel RS232;
    private javax.swing.JLabel Remote;
    private javax.swing.JMenuItem ajouterRemote;
    private javax.swing.JRadioButtonMenuItem baud115200;
    private javax.swing.JRadioButtonMenuItem baud19200;
    private javax.swing.JRadioButtonMenuItem baud38400;
    private javax.swing.JRadioButtonMenuItem baud9600;
    private javax.swing.JRadioButtonMenuItem bits6;
    private javax.swing.JRadioButtonMenuItem bits7;
    private javax.swing.JRadioButtonMenuItem bits8;
    private javax.swing.JRadioButtonMenuItem bits9;
    private javax.swing.JMenuItem btnConnexion;
    private javax.swing.JMenuItem btnDeconnexion;
    private javax.swing.JRadioButtonMenuItem cad_1_par_2mins;
    private javax.swing.JRadioButtonMenuItem cad_1_par_5mins;
    private javax.swing.JRadioButtonMenuItem cad_2_min;
    private javax.swing.JMenu cadence;
    private javax.swing.JMenuItem changerRemote;
    private javax.swing.JLabel compteur1;
    private javax.swing.JLabel compteur2;
    private javax.swing.JLabel compteur3;
    private javax.swing.JLabel compteur4;
    private javax.swing.JLabel compteur5;
    private javax.swing.JTextField console;
    private javax.swing.ButtonGroup groupBaud;
    private javax.swing.ButtonGroup groupBits;
    private javax.swing.ButtonGroup groupParity;
    private javax.swing.ButtonGroup groupPorts;
    private javax.swing.ButtonGroup groupStop;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuBaud;
    private javax.swing.JMenu menuBits;
    private javax.swing.JMenu menuConfig;
    private javax.swing.JMenu menuConnexion;
    private javax.swing.JMenuItem menuModifier;
    private javax.swing.JMenuItem menuNouveau;
    private javax.swing.JMenu menuParity;
    private javax.swing.JMenu menuPort;
    private javax.swing.JMenuItem menuQuitter;
    private javax.swing.JMenu menuRemote;
    private javax.swing.JMenuItem menuSauvegardes;
    private javax.swing.JMenu menuStop;
    private javax.swing.JRadioButtonMenuItem parityEven;
    private javax.swing.JRadioButtonMenuItem parityNone;
    private javax.swing.JRadioButtonMenuItem parityOdd;
    private javax.swing.JButton pause;
    private javax.swing.JButton pause1;
    private javax.swing.JButton pause2;
    private javax.swing.JButton pause3;
    private javax.swing.JButton pause4;
    private javax.swing.JButton pause5;
    private javax.swing.JButton pause6;
    private javax.swing.JButton pause7;
    private javax.swing.JButton pause8;
    private javax.swing.JMenuItem remoteSelect;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset2;
    private javax.swing.JButton reset3;
    private javax.swing.JButton reset4;
    private javax.swing.JButton reset5;
    private javax.swing.JRadioButton selectEch1;
    private javax.swing.JRadioButton selectEch2;
    private javax.swing.JRadioButton selectEch3;
    private javax.swing.JRadioButton selectEch4;
    private javax.swing.JRadioButton selectEch5;
    private javax.swing.JButton set1;
    private javax.swing.JButton set2;
    private javax.swing.JButton set3;
    private javax.swing.JButton set4;
    private javax.swing.JButton set5;
    private javax.swing.JTextField setCompteur1;
    private javax.swing.JTextField setCompteur2;
    private javax.swing.JTextField setCompteur3;
    private javax.swing.JTextField setCompteur4;
    private javax.swing.JTextField setCompteur5;
    private javax.swing.JButton start;
    private javax.swing.JLabel statutRemote;
    private javax.swing.JLabel statutRs232;
    private javax.swing.JButton stop;
    private javax.swing.JRadioButtonMenuItem stop1;
    private javax.swing.JRadioButtonMenuItem stop2;
    private javax.swing.JLabel titre;
    private javax.swing.JLabel version;
    private javax.swing.JLabel voyant;
    // End of variables declaration//GEN-END:variables

    private void setStatusRS232(boolean statut) {

        if (statut) {

            statutRs232.setForeground(Color.GREEN);
            statutRs232.setBackground(Color.GREEN);
        } else {
            statutRs232.setForeground(Color.RED);
            statutRs232.setBackground(Color.RED);
        }

    }

    public void montrerError(String message, String titre) {
        JOptionPane.showMessageDialog(this, message, titre, JOptionPane.ERROR_MESSAGE);
    }
    
    private Connecteur getConnecteur(){
        
        if (this.connecteur == null) {
        this.connecteur = new Connecteur();
        this.connecteur.addObserver(this);
        }
        return this.connecteur;
    
    }

    @Override
    public void update(Observable o, Object arg) {
        
        String inputLine = (String) arg;
        console.setText(inputLine);
        
    }

}
